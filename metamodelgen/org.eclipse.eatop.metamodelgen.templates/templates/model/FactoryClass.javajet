<%@ jet package="org.eclipse.eatop.metamodelgen.emf.codegen.ecore.templates.model" class="Factory" imports="org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.emf.ecore.* org.eclipse.emf.common.util.* org.eclipse.eatop.metamodelgen.templates.internal.util.*" %>
<%
/**
 * <copyright>
 * 
 * Copyright (c) Continental AG and others.
 * All rights reserved. This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 
 * which accompanies this distribution, and is
 * available at http://www.eclipse.org/org/documents/epl-v10.php
 * 
 * Contributors: 
 *     Continental AG - Initial API and implementation
 * 
 * </copyright>
 */
%>
<%GenPackage genPackage = (GenPackage)argument; GenModel genModel=genPackage.getGenModel();%>
<%EClass identifiableClass = null;%>
<%TreeIterator<EObject> iterator = genModel.eAllContents();%>
<%while (iterator.hasNext()) {%>
<%EObject currentObject = iterator.next();%>
<%if (currentObject instanceof GenClass && "Identifiable".equals(((GenClass) currentObject).getEcoreClass().getName())) {%>
<%identifiableClass = ((GenClass)currentObject).getEcoreClass();%>
<%break;%>
<%}%>
<%}%>
<%@ include file="../Header.javajetinc"%>
package <%=GenModels.getRootGenPackage(genModel).getUtilitiesPackageName()%>;

<%genModel.markImportLocation(stringBuffer);%>

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 */
public class <%=GenModels.getUtilityClassSimpleName(genModel, "Factory")%> extends <%=genModel.getImportedName("org.eclipse.emf.ecore.impl.EFactoryImpl")%> implements <%=genModel.getImportedName("org.eclipse.emf.ecore.EFactory")%> {

    public static final <%=GenModels.getUtilityClassSimpleName(genModel, "Factory")%> eINSTANCE = new <%=GenModels.getUtilityClassSimpleName(genModel, "Factory")%>();

    /**
    * Returns the value of the '<em><b>EPackage</b></em>' reference.
    */
    @Override
    public <%=genModel.getImportedName("org.eclipse.emf.ecore.EPackage")%> getEPackage()
    {
        if (ePackage == null)
        {
            ePackage = <%=genModel.getImportedName("org.eclipse.eatop.eastadl21.Eastadl21Package")%>.eINSTANCE;
        }
        return ePackage;
    }
	
    /**
    * <!-- begin-user-doc -->
    * Creates a new instance of the class and returns it.
    * Ask the package the list of its classifiers. Given these classifiers, ask their packages what their factories are.
    * @param eClass the class of the new instance.
    * @return a new instance of the class.
    * <!-- end-user-doc -->
    */
    @Override
    public <%=genModel.getImportedName("org.eclipse.emf.ecore.EObject")%> create(<%=genModel.getImportedName("org.eclipse.emf.ecore.EClass")%> eClass)
    {
        EObject result = null;

        if (eClass.eContainer() instanceof EPackage)
        {
            result = ((EPackage) eClass.eContainer()).getEFactoryInstance().create(eClass);
        }
        return result;
    }
	
<%iterator = genModel.eAllContents();%>
<%while (iterator.hasNext()) {%>
<%EObject currentObject = iterator.next();%>
<%if (currentObject instanceof GenClass) {%>
<%EClass currentClass = ((GenClass)currentObject).getEcoreClass();%>
<%if (!currentClass.isAbstract()) {%>
<%String qualifiedPckName = EClasses.getQualifiedPackageName(currentClass);%>
<%String basePackage = "org.eclipse.eatop.";%>
<%String factoryName = basePackage + EClasses.getFactoryQName(currentClass, qualifiedPckName);%>
<%String eastadl21PackageComplete = basePackage + "eastadl21.";%>
<%String currentClassName =currentClass.getName();%>
    public <%=eastadl21PackageComplete%><%=currentClassName%> create<%=currentClassName%>() {
<%if (currentClass.getEAllSuperTypes().contains(identifiableClass)) {%>
<%String variableName = currentClassName.substring(0, 1).toLowerCase() + currentClassName.substring(1);%>
        <%=eastadl21PackageComplete%><%=currentClassName%> <%=variableName%> = <%=factoryName%>.eINSTANCE.create<%=currentClassName%>();
        <%=variableName%>.setUuid(java.util.UUID.randomUUID().toString());
        return <%=variableName%>;
<%} else {%>
        return <%=factoryName%>.eINSTANCE.create<%=currentClassName%>();
<%}%>
    }
    
<%}%>
<%}%>
<%}%>
}
<%genModel.emitSortedImports();%>